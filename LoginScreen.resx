<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAZvUlEQVR4Xu2dCcxmV1nHp19b2jLTTqHT
        KdNSllaQtlAsLaIIhsUKiKBBDAJVgsgSRREqICEaQYMIytpgECVIxAVB3KXghkRRGgkoCChBEGUTUIQK
        ooL/3/E8l/vdvu8333wz8y4zv1/yz7nbe+95zznPc5a7nF0iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
        IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKHzllnnbVr7969TTe5
        yU12nXnmmYNE5BikjP3CCy/cddOb3rQtRxvRSdGJ0Qls27dvX9vH8SKypuzZs6fV6Bgz9BoeI8fgN/bv
        37/rggsuGGr+fmw5hA3WoRyHiKw4GCqiid+XMXhqd9S2jYx9d3TP6JlZ/86E55xxxhlD16Af037LMq2G
        cgasi8gK0A111+7du2uZ2nuoxVFv8p+Q5dskfEz0muij0ZdG+mz0h9ETo4tj7Bunn356O3e/TjkSzjM4
        GY4RkQWBMWOAJ554Yhn8VrX8mdF9op+J3h79dzQ2+i/2bf872ob+J/qb6Dk5zz0jWgvt3F1DV4LrgF0F
        kaNAGRbqRo1uUMv3/TTXL8ny90e/E30yGht2GTfC+Oftm27/cPSqnPthCQ/UNaurEA0OiBYB4wtsx1mJ
        yCHCSDzGxUAeRhVjukEtj3H1Zvi+6AHRNdHfRdPanPVZtfzBVL+bOgq6Cn8UXR3dvroKGPwll1xCfFo8
        iTNxPPvss4fxAxGZQdWk1edmOWEbkceQ+nrtOznhZdEPRW+IPh2NDRRtVcvvRJxnVusAJ/G30U9H94p2
        Y+wJK66bugqMU/Tt/Z+LHKdgKBOjGGr5qjHZ3vfdLOG3Ry+L3heNjbAMcSe1/E41yxmg1lWIHpY4HyjH
        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
        +RAoxrzV/f+5iuFflpDztAFMEVlxusHydCghjyNjzNvt/5fq+CdGnMdxAJF1YGyw0aujsUFvV3U8X4Pm
        PLYARNaBbrAlPumOIR9qF6DGAZhnATiXtwNFVp0YaQ0Anhej/Ww0Ne7tqpwAHzzBAdgKEFllMPwy1Khe
        Htvu7b+pqhvwrIjzeTtQZJXpDqD1/7P8hIRjQz6Ypo6iug3MlTC87SgiK8rYAUQvjzDgQxkAnNVaYC4B
        poHjnI4DiKwq3QGU3hphwNsZAPxQxJekWR4fX8sPiTintwNFVpFuoPWmKNTcBVuNAdS+d8d5JGizBI+3
        t9ZD9jFLUnMAtgBEVpBe+9cA4BVRGflWqhr+zf33fNCU9XIAtf892d+MvyQiK0SMtNXQhDFQJvjAcA/W
        /6/9vxTVOV7Ut01/e4eI/e0tQxFZIbpx1gDgC6NZRjxVvSj0E1EZ9+nReBbhOsf3RcM1RGSFwChjuG2U
        Pst/HJUBE85TM+785rEJ+R2vDxOO56AoB/C6iH22AERWjW6caHf0L1EZcBn7LDUHEYO+H0Yd0c9vff1s
        f14/puah+EjUvkkZ+bVgkVUiBlkDgBdHNO2puQlLrI9V278Yg79jdwDtHP07lDiSepegJja5W9Su1S8r
        IqtAjLIGAB+eEGPFyAkPpuvzmwPdAbSaHUfAepbv0Y+pc/1k1K7FfhFZEWKU9QzAXaJnxECfThjxLP9z
        IiYnYXDwBV2M9r84eurevXtP6nMJ8PtSaw1k22Oil3XVQKBdAJF1hpmjZ2nyGfph9uPb3e52uzY2NjZJ
        RFaEMtrU0tTOfBGoKeuEdA/mKse02h8B4Ze+9KU2AeroOM5T4wzDsSKyIpQRY6B8HJSwavTaN9bYmGsd
        qjswS5yPqek4RkRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERkWeza9X82zvOmtt3s5QAAAABJRU5ErkJggg==
</value>
  </data>
</root>